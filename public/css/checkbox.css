input[type=checkbox] {
  display: none;
}
input[type=checkbox] + span {
  display: inline-block;
  position: relative;
  white-space: nowrap;
  color: rgba(0, 0, 66, .4);
  transition: color 300ms ease-in;
}
input[type=checkbox] + span::after {
  position: absolute;
  display: block;
  content: '';
  top: 65%;
  left: -5%;
  width: 110%;
  height: 0.1em;
  border-radius: 0.05em;
  background-color: rgba(150, 0, 0, .8);
  transform-origin: 0% 0%;
  transform: rotateZ(-6deg);
  opacity: 1;
  transition: width 300ms ease-in;
}
input[type=checkbox]:checked + span {
  color: rgba(0, 0, 66, .8);
}
input[type=checkbox]:checked + span::after {
  width: 0%;
  opacity: 0;
  transition: opacity 150ms ease-out, width 0ms linear 200ms;
}
td span {
  padding: 0 5px 5px 5px
}

.Switcher {
  position: relative;
  display: flex;
  border-radius: 5em;
  box-shadow: inset 0 0 0 1px;
  overflow: hidden;
  cursor: pointer;
}

@-webkit-keyframes r-p {
  50% {
    -webkit-transform: rotateY(45deg);
            transform: rotateY(45deg);
  }
}
@keyframes r-p {
  50% {
    -webkit-transform: rotateY(45deg);
            transform: rotateY(45deg);
  }
}
@-webkit-keyframes r-n {
  50% {
    -webkit-transform: rotateY(-45deg);
            transform: rotateY(-45deg);
  }
}
@keyframes r-n {
  50% {
    -webkit-transform: rotateY(-45deg);
            transform: rotateY(-45deg);
  }
}
.Switcher::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  width: 200%;
  border-radius: inherit;
  background-color: #000000;
  -webkit-transform: translateX(-75%);
          transform: translateX(-75%);
  transition: -webkit-transform .5s ease-in-out;
  transition: transform .5s ease-in-out;
  transition: transform .5s ease-in-out, -webkit-transform .5s ease-in-out;
}
.Switcher__checkbox:checked + .Switcher::before {
  -webkit-transform: translateX(25%);
          transform: translateX(25%);
}

.Switcher__trigger {
  position: relative;
  z-index: 1;
  padding: 1em 5em;
}
.Switcher__trigger::after {
  content: attr(data-value);
}
.Switcher__trigger::before {
  --i: var(--x);
  content: attr(data-value);
  position: absolute;
  color: #eff5f8;
  transition: opacity .3s;
  opacity: calc((var(--i) + 1) / 2);
  transition-delay: calc(.3s * (var(--i) - 1) / -2);
}
.Switcher__checkbox:checked + .Switcher .Switcher__trigger::before {
  --i: calc(var(--x) * -1);
}
.Switcher__trigger:nth-of-type(1)::before {
  --x: 1;
}
.Switcher__trigger:nth-of-type(2)::before {
  --x: -1;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.box {
  display: flex;
  flex: 1;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  overflow: hidden;
  -webkit-perspective: 750px;
          perspective: 750px;
}

.rating {
	border: 1px solid rgba(203, 209, 201, 0.712);
	padding: 5px 1px 1px 0px;
  border-radius: 2.2rem;
  width: 145px;
}

input[type="radio"] {
  display: none;
	position: absolute;
	opacity: 0;
}

input[type="radio"] + span {
	cursor: pointer;
}

.super-happy + #super-happy:hover,
.super-happy[checked=checked] + #super-happy,
.super-happy:focus + #super-happy {
	border-color: rgb(0, 109, 217);
}

.happy + #happy:hover,
.happy[checked=checked] + #happy,
.happy:focus + #happy {
	border-color: rgb(0, 204, 79);
}

.neutral + #neutral:hover,
.neutral[checked=checked] + #neutral,
.neutral:focus + #neutral {
	border-color: rgb(232, 214, 0);
}

.sad + #sad:hover,
.sad[checked=checked] + #sad,
.sad:focus + #sad {
	border-color: rgb(229, 132, 0);
}

.super-sad + #super-sad:hover,
.super-sad[checked=checked] + #super-sad,
.super-sad:focus + #super-sad {
	border-color: rgb(239, 42, 16);
}

.rb-txt {
  display: inline-block;
  width: 22px;
  height: 22px;
  text-align: center;
  position: static;
  top: 110%;
  left: 100%;
  transform: translate(0%, -10%);
  padding: 0px 0px 0px 1px;
  border: 2px dotted rgb(96, 97, 102);
  background: transparent;
  border-radius: 50%;
  font-size: 1em;
  color: rgb(43, 131, 204);
}

.rotate {
  animation-name: Rotate;
  animation-duration: 0.2s;
  animation-iteration-count: 2;
  animation-timing-function: linear;
  -webkit-animation-name: Rotate;
  -webkit-animation-duration: 0.2s;
  -webkit-animation-iteration-count: 2;
  -webkit-animation-timing-function: linear;
  -moz-animation-name: Rotate;
  -moz-animation-duration: 0.2s;
  -moz-animation-iteration-count: 2;
  -moz-animation-timing-function: linear;
  -ms-animation-name: Rotate;
  -ms-animation-duration: 0.2s;
  -ms-animation-iteration-count: 2;
  -ms-animation-timing-function: linear;
}

@keyframes Rotate
{
 from{transform:rotate(0deg);}
 to{transform:rotate(360deg);}
}
@-webkit-keyframes Rotate
{
 from{-webkit-transform:rotate(0deg);}
 to{-webkit-transform:rotate(360deg);}
}
@-moz-keyframes Rotate
{
 from{-moz-transform:rotate(0deg);}
 to{-moz-transform:rotate(360deg);}
}
@-ms-keyframes Rotate
{
 from{-ms-transform:rotate(0deg);}
 to{-ms-transform:rotate(360deg);}
}